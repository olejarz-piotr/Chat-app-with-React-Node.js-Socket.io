{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SZOP\\\\Desktop\\\\Chat app\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nlet socket;\nimport './Chat.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = _ref => {\n  _s();\n\n  let {\n    location\n  } = _ref;\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [message, setMessage] = useState('');\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io(ENDPOINT);\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    });\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"outerContainer\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Chat, \"V/9NTAimDcYMyc3/tAj11m/igv4=\");\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/SZOP/Desktop/Chat app/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","messages","setMessages","message","setMessage","ENDPOINT","parse","search","emit","off","on","sendMessage","event","preventDefault","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,IAAIC,MAAJ;AACA,OAAO,YAAP;;;AACA,MAAMC,IAAI,GAAG,QAAkB;AAAA;;AAAA,MAAjB;AAAEC,IAAAA;AAAF,GAAiB;AAC3B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMe,QAAQ,GAAG,gBAAjB;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACc,KAAZ,CAAkBV,QAAQ,CAACW,MAA3B,CAAvB;AACAb,IAAAA,MAAM,GAAGD,EAAE,CAACY,QAAD,CAAX;AACAP,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAG,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAL,IAAAA,MAAM,CAACc,IAAP,CAAY,MAAZ,EAAoB;AAAEX,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB;AAGA,WAAO,MAAM;AACTL,MAAAA,MAAM,CAACc,IAAP,CAAY,YAAZ;AACAd,MAAAA,MAAM,CAACe,GAAP;AACH,KAHD;AAKH,GAdQ,EAcN,CAACJ,QAAD,EAAWT,QAAQ,CAACW,MAApB,CAdM,CAAT;AAiBAhB,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,MAAM,CAACgB,EAAP,CAAU,SAAV,EAAsBP,OAAD,IAAa;AAC9BD,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAaE,OAAb,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIN,CAACF,QAAD,CAJM,CAAT;;AAMA,QAAMU,WAAW,GAAIC,KAAD,IAAW;AAC3BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAIV,OAAJ,EAAa;AACbT,MAAAA,MAAM,CAACc,IAAP,CAAY,aAAZ,EAA0BL,OAA1B,EAAmC,MAAKC,UAAU,CAAC,EAAD,CAAlD;AACH;AACA,GAND;;AAQJU,EAAAA,OAAO,CAACC,GAAR,CAAYZ,OAAZ,EAAoBF,QAApB;AAEI,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAjDD;;GAAMN,I;;KAAAA,I;AAqDN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport queryString from \"query-string\";\r\nimport io from \"socket.io-client\";\r\n\r\nlet socket;\r\nimport './Chat.css'\r\nconst Chat = ({ location }) => {\r\n    const [name, setName] = useState('');\r\n    const [room, setRoom] = useState('');\r\n    const [messages, setMessages] = useState([]);\r\n    const [message, setMessage] = useState('');\r\n    const ENDPOINT = 'localhost:5000';\r\n\r\n    useEffect(() => {\r\n        const { name, room } = queryString.parse(location.search)\r\n        socket = io(ENDPOINT);\r\n        setName(name);\r\n        setRoom(room);\r\n       \r\n        socket.emit('join', { name, room })\r\n\r\n\r\n        return () => {\r\n            socket.emit('disconnect');\r\n            socket.off();\r\n        }\r\n\r\n    }, [ENDPOINT, location.search]);\r\n    \r\n\r\n    useEffect(() => { \r\n        socket.on('message', (message) => {\r\n            setMessages([...messages,message])\r\n        })\r\n    }, [messages])\r\n    \r\n    const sendMessage = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (message) {\r\n        socket.emit('sendMessage',message, ()=> setMessage(''))\r\n    }\r\n    }\r\n    \r\nconsole.log(message,messages);\r\n\r\n    return (\r\n        <div className=\"outerContainer\">\r\n            <div className=\"container\">\r\n\r\n                {/* <input value={message} onChange={event =>  setMessage(event.target.value)} onKeyPress={event=> event.key===\"Enter\"?sendMessage(event):null} /> */}\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\nexport default Chat;\r\n"]},"metadata":{},"sourceType":"module"}